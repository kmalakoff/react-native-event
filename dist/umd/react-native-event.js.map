{"version":3,"file":"react-native-event.js","sources":["../../src/native.tsx","../../src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactNative from 'react-native';\n\nexport type EventTypes = ReactNative.GestureResponderEvent;\nexport type HandlerType = (event: EventTypes) => void;\n\nexport type EventContextType = {\n  subscribe: (handler: HandlerType) => void;\n};\n\nexport const EventContext = React.createContext<EventContextType | undefined>(\n  undefined,\n);\n\nexport type EventProviderProps = {\n  events?: string[];\n  children?: React.ReactNode;\n};\nexport function EventProvider({ children }: EventProviderProps) {\n  const [handlers] = React.useState<HandlerType[]>([]);\n  function onEvent(event: EventTypes) {\n    handlers.forEach((subscriber) => subscriber(event));\n  }\n  function subscribe(handler: HandlerType) {\n    handlers.push(handler);\n    return () => handlers.splice(handlers.indexOf(handler), 1);\n  }\n\n  return (\n    <EventContext.Provider value={{ subscribe }}>\n      <ReactNative.View\n        style={ReactNative.StyleSheet.absoluteFill}\n        onStartShouldSetResponderCapture={(event:ReactNative.GestureResponderEvent) => {\n          event.persist();\n          onEvent(event);\n          return false;\n        }}\n      >\n        {children}\n      </ReactNative.View>\n    </EventContext.Provider>\n  );\n}\n\nexport function useEvent(handler, dependencies) {\n  const { subscribe } = React.useContext(EventContext);\n  React.useEffect(\n    () => subscribe(handler),\n    [subscribe, handler].concat(dependencies),\n  );\n}\n\nexport default {\n  EventContext,\n  EventProvider,\n  useEvent\n}\n","// define window to avoid conflicts with dom and react-native types\ndeclare global {\n  interface Document {}\n  interface Window {\n    document: Document;\n  }\n}\ndeclare const window: Window & typeof globalThis;\n\n// @ts-ignore\nimport native from './native.tsx';\nimport type {EventTypes as EventTypesNative, HandlerType as HandlerTypeNative, EventContextType as EventContextTypeNative} from './native';\nimport dom from 'react-dom-event';\nimport type {EventTypes as EventTypesDOM, HandlerType as HandlerTypeDOM, EventContextType as EventContextTypeDOM} from 'react-dom-event';\n\nexport type EventTypes = EventTypesNative | EventTypesDOM;\nexport type HandlerType = HandlerTypeNative | HandlerTypeDOM;\nexport type EventContextType = EventContextTypeNative | EventContextTypeDOM;\n\nlet EventContextUniversal:\n  | typeof native.EventContext\n  | typeof dom.EventContext\n  | null = null;\nlet EventProviderUniversal:\n  | typeof native.EventProvider\n  | typeof dom.EventProvider\n  | null = null;\nlet useEventUniversal: typeof native.useEvent | typeof dom.useEvent | null =\n  null;\nif (window?.document) {\n  EventContextUniversal = dom.EventContext;\n  EventProviderUniversal = dom.EventProvider;\n  useEventUniversal = dom.useEvent;\n} else {\n  EventContextUniversal = native.EventContext;\n  EventProviderUniversal = native.EventProvider;\n  useEventUniversal = native.useEvent;\n}\nexport const EventContext = EventContextUniversal;\nexport const EventProvider = EventProviderUniversal;\nexport const useEvent = useEventUniversal;\n"],"names":["EventContext","React","createContext","undefined","EventProvider","children","onEvent","event","handlers","forEach","subscriber","subscribe","handler","push","splice","indexOf","useState","Provider","value","ReactNative","View","style","StyleSheet","absoluteFill","onStartShouldSetResponderCapture","persist","useEvent","dependencies","useContext","useEffect","concat","EventContextUniversal","EventProviderUniversal","useEventUniversal","window","document","dom","native"],"mappings":";;;;;;;;;;;;EAAA,SAAA,iBAAA,CAAA,GAAA,EAAA,GAAA,EAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EAUO,IAAMA,cAAY,iBAAGC,yBAAK,CAACC,aAAa,CAC7CC,SAAS,CACV,CAAC;EAMK,SAASC,eAAa,CAAC,KAAgC,EAAE;EAAlC,IAAA,IAAEC,QAAQ,GAAV,KAAgC,CAA9BA,QAAQ,CAAsB;EAEnDC,IAAAA,IAAAA,OAAO,GAAhB,SAASA,OAAO,CAACC,KAAiB,EAAE;EAClCC,QAAAA,QAAQ,CAACC,OAAO,CAAC,SAACC,UAAU,EAAA;qBAAKA,UAAU,CAACH,KAAK,CAAC,CAAA;EAAA,SAAA,CAAC,CAAC;EACrD,KAAA,CAAA;EACQI,IAAAA,IAAAA,SAAS,GAAlB,SAASA,SAAS,CAACC,OAAoB,EAAE;EACvCJ,QAAAA,QAAQ,CAACK,IAAI,CAACD,OAAO,CAAC,CAAC;UACvB,OAAO,WAAA;qBAAMJ,QAAQ,CAACM,MAAM,CAACN,QAAQ,CAACO,OAAO,CAACH,OAAO,CAAC,EAAE,CAAC,CAAC,CAAA;WAAA,CAAC;EAC5D,KAAA,CAAA;EAPD,IAAA,IAAmBX,GAAiC,GAAA,cAAA,CAAjCA,yBAAK,CAACe,QAAQ,CAAgB,EAAE,CAAC,EAAA,CAAA,CAAA,EAA7CR,QAAQ,GAAIP,GAAiC,GAArC,CAAsC;MASrD,qBACEA,yBAAA,CAAA,aAAA,CAACD,cAAY,CAACiB,QAAQ,EAAA;EAACC,QAAAA,KAAK,EAAE;EAAEP,YAAAA,SAAS,EAATA,SAAS;EAAE,SAAA;uBACzCV,yBAACkB,CAAAA,aAAAA,CAAAA,+BAAW,CAACC,IAAI,EAAA;EACfC,QAAAA,KAAK,EAAEF,+BAAW,CAACG,UAAU,CAACC,YAAY;UAC1CC,gCAAgC,EAAE,SAACjB,KAAuC,EAAK;cAC7EA,KAAK,CAACkB,OAAO,EAAE,CAAC;cAChBnB,OAAO,CAACC,KAAK,CAAC,CAAC;EACf,YAAA,OAAO,KAAK,CAAC;EACd,SAAA;SAEAF,QAAQ,CACQ,CACG,CACxB;EACH,CAAA;EAEM,SAASqB,UAAQ,CAACd,OAAO,EAAEe,YAAY,EAAE;EAC9C,IAAA,IAAM,SAAW,GAAK1B,yBAAK,CAAC2B,UAAU,CAAC5B,cAAY,CAAC,CAA5CW,SAA4C,CAAC;MACrDV,yBAAK,CAAC4B,SAAS,CACb,WAAA;iBAAMlB,SAAS,CAACC,OAAO,CAAC,CAAA;OAAA,EACxB;UAACD,SAAS;UAAEC,OAAO;EAAC,KAAA,CAACkB,MAAM,CAACH,YAAY,CAAC,CAC1C,CAAC;EACH,CAAA;AAED,eAAe;EACb3B,IAAAA,YAAY,EAAZA,cAAY;EACZI,IAAAA,aAAa,EAAbA,eAAa;EACbsB,IAAAA,QAAQ,EAARA,UAAQ;GACT;;EC/CD;EAUA,IAAIK,qBAAqB,GAGd,IAAI,CAAC;EAChB,IAAIC,sBAAsB,GAGf,IAAI,CAAC;EAChB,IAAIC,iBAAiB,GACnB,IAAI,CAAC;EACP,IAAIC,MAAM,KAANA,IAAAA,IAAAA,MAAM,KAAU,KAAA,CAAA,GAAhBA,KAAAA,CAAgB,GAAhBA,MAAM,CAAEC,QAAQ,EAAE;EACpBJ,IAAAA,qBAAqB,GAAGK,uBAAG,CAACpC,YAAY,CAAC;EACzCgC,IAAAA,sBAAsB,GAAGI,uBAAG,CAAChC,aAAa,CAAC;EAC3C6B,IAAAA,iBAAiB,GAAGG,uBAAG,CAACV,QAAQ,CAAC;GAClC,MAAM;EACLK,IAAAA,qBAAqB,GAAGM,MAAM,CAACrC,YAAY,CAAC;EAC5CgC,IAAAA,sBAAsB,GAAGK,MAAM,CAACjC,aAAa,CAAC;EAC9C6B,IAAAA,iBAAiB,GAAGI,MAAM,CAACX,QAAQ,CAAC;EACrC,CAAA;AACY1B,MAAAA,YAAY,GAAG+B,sBAAsB;AACrC3B,MAAAA,aAAa,GAAG4B,uBAAuB;AACvCN,MAAAA,QAAQ,GAAGO;;;;;;;;;;;;"}
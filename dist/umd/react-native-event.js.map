{"version":3,"file":"react-native-event.js","sources":["../../src/index.ts"],"sourcesContent":["import { createContext, createElement, useContext, useEffect, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport type { GestureResponderEvent } from 'react-native';\n\nexport type EventTypes = GestureResponderEvent;\nexport type HandlerType = (event: EventTypes) => void;\n\nexport type EventContextType = {\n  subscribe: (handler: HandlerType) => void;\n};\n\nexport const EventContext = createContext<EventContextType | undefined>(undefined);\n\nexport type EventProviderProps = {\n  events?: string[];\n  children?: ReactNode;\n};\nexport function EventProvider({ children }: EventProviderProps) {\n  const state = useState<HandlerType[]>([]);\n  const handlers = state[0];\n\n  function onEvent(event: EventTypes) {\n    handlers.forEach((subscriber) => subscriber(event));\n  }\n  function subscribe(handler: HandlerType) {\n    handlers.push(handler);\n    return () => handlers.splice(handlers.indexOf(handler), 1);\n  }\n\n  return createElement(\n    EventContext.Provider,\n    { value: { subscribe } },\n    createElement(\n      View,\n      {\n        style: StyleSheet.absoluteFill,\n        onStartShouldSetResponderCapture: (event) => {\n          event.persist();\n          onEvent(event);\n          return false;\n        },\n      },\n      children\n    )\n  );\n}\n\nexport function useEvent(handler, dependencies) {\n  const context = useContext(EventContext);\n  if (!context) {\n    throw new Error('react-native-event: subscribe not found on context. You might be missing the EventProvider or have multiple instances of react-native-event');\n  }\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => context.subscribe(handler), [context.subscribe, handler].concat(dependencies));\n}\n"],"names":["EventContext","createContext","undefined","EventProvider","children","state","useState","handlers","onEvent","event","forEach","subscriber","subscribe","handler","push","splice","indexOf","createElement","Provider","value","View","style","StyleSheet","absoluteFill","onStartShouldSetResponderCapture","persist","useEvent","dependencies","context","useContext","Error","useEffect","concat"],"mappings":";;;;;;AAYO,MAAMA,YAAeC,GAAAA,mBAAAA,CAA4CC,SAAW,EAAA;EAM5E,SAASC,cAAc,KAAgC,EAAA;EAAhC,IAAA,IAAEC,WAAF,KAAEA,CAAAA,QAAAA,CAAAA;MAC9B,IAAMC,KAAAA,GAAQC,eAAwB,EAAE,CAAA,CAAA;MACxC,IAAMC,QAAAA,GAAWF,KAAK,CAAC,CAAE,CAAA,CAAA;EAEzB,IAAA,SAASG,QAAQC,KAAiB,EAAA;UAChCF,QAASG,CAAAA,OAAO,CAAC,SAACC,UAAAA,EAAAA;qBAAeA,UAAWF,CAAAA,KAAAA,CAAAA,CAAAA;;EAC9C,KAAA;EACA,IAAA,SAASG,UAAUC,OAAoB,EAAA;EACrCN,QAAAA,QAAAA,CAASO,IAAI,CAACD,OAAAA,CAAAA,CAAAA;UACd,OAAO,WAAA;EAAMN,YAAAA,OAAAA,QAAAA,CAASQ,MAAM,CAACR,QAASS,CAAAA,OAAO,CAACH,OAAU,CAAA,EAAA,CAAA,CAAA,CAAA;;EAC1D,KAAA;MAEA,OAAOI,mBAAAA,CACLjB,YAAakB,CAAAA,QAAQ,EACrB;UAAEC,KAAO,EAAA;cAAEP,SAAAA,EAAAA,SAAAA;EAAU,SAAA;EAAE,KAAA,EACvBK,oBACEG,gBACA,EAAA;EACEC,QAAAA,KAAAA,EAAOC,uBAAWC,YAAY;EAC9BC,QAAAA,gCAAAA,EAAkC,SAACf,KAAAA,EAAAA;EACjCA,YAAAA,KAAAA,CAAMgB,OAAO,EAAA,CAAA;cACbjB,OAAQC,CAAAA,KAAAA,CAAAA,CAAAA;cACR,OAAO,KAAA,CAAA;EACT,SAAA;OAEFL,EAAAA,QAAAA,CAAAA,CAAAA,CAAAA;EAGN,CAAA;EAEO,SAASsB,QAAAA,CAASb,OAAO,EAAEc,YAAY,EAAA;EAC5C,IAAA,IAAMC,UAAUC,gBAAW7B,CAAAA,YAAAA,CAAAA,CAAAA;EAC3B,IAAA,IAAI,CAAC4B,OAAS,EAAA;EACZ,QAAA,MAAM,IAAIE,KAAM,CAAA,6IAAA,CAAA,CAAA;EAClB,KAAA;;MAGAC,eAAU,CAAA,WAAA;EAAMH,QAAAA,OAAAA,OAAAA,CAAQhB,SAAS,CAACC,OAAAA,CAAAA,CAAAA;EAAU,KAAA,EAAA;EAACe,QAAAA,OAAAA,CAAQhB,SAAS;EAAEC,QAAAA,OAAAA;EAAQ,KAAA,CAACmB,MAAM,CAACL,YAAAA,CAAAA,CAAAA,CAAAA;EAClF;;;;;;;;;;"}
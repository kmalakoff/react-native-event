{"version":3,"file":"react-native-event.js","sources":["../../src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactNative from 'react-native';\n\nexport type EventTypes = ReactNative.GestureResponderEvent;\nexport type HandlerType = (event: EventTypes) => void;\n\nexport type EventContextType = {\n  subscribe: (handler: HandlerType) => void;\n};\n\nexport const EventContext = React.createContext<EventContextType | undefined>(\n  undefined,\n);\n\nexport type EventProviderProps = {\n  events?: string[];\n  children?: React.ReactNode;\n};\nexport function EventProvider({ children }: EventProviderProps) {\n  const state = React.useState<HandlerType[]>([]);\n  const handlers = state[0];\n\n  function onEvent(event: EventTypes) {\n    handlers.forEach((subscriber) => subscriber(event));\n  }\n  function subscribe(handler: HandlerType) {\n    handlers.push(handler);\n    return () => handlers.splice(handlers.indexOf(handler), 1);\n  }\n\n  return (\n    <EventContext.Provider value={{ subscribe }}>\n      <ReactNative.View\n        style={ReactNative.StyleSheet.absoluteFill}\n        onStartShouldSetResponderCapture={(\n          event: ReactNative.GestureResponderEvent,\n        ) => {\n          event.persist();\n          onEvent(event);\n          return false;\n        }}\n      >\n        {children}\n      </ReactNative.View>\n    </EventContext.Provider>\n  );\n}\n\nexport function useEvent(handler, dependencies) {\n  const context = React.useContext(EventContext);\n  if (!context) {\n    throw new Error(\n      'react-native-event: subscribe not found on context. You might be missing the EventProvider or have multiple instances of react-native-event',\n    );\n  }\n\n  React.useEffect(\n    () => context.subscribe(handler),\n    [context.subscribe, handler].concat(dependencies),\n  );\n}\n"],"names":["EventContext","React","createContext","undefined","EventProvider","children","onEvent","event","handlers","forEach","subscriber","subscribe","handler","push","splice","indexOf","state","useState","Provider","value","ReactNative","View","style","StyleSheet","absoluteFill","onStartShouldSetResponderCapture","persist","useEvent","dependencies","context","useContext","Error","useEffect","concat"],"mappings":";;;;;;;;;;;AAUO,MAAMA,YAAY,iBAAGC,yBAAK,CAACC,aAAa,CAC7CC,SAAS,EACT;EAMK,SAASC,aAAa,CAAC,KAAgC,EAAE;EAAlC,IAAA,IAAEC,QAAQ,GAAV,KAAgC,CAA9BA,QAAQ,CAAsB;EAInDC,IAAAA,IAAAA,OAAO,GAAhB,SAASA,OAAO,CAACC,KAAiB,EAAE;EAClCC,QAAAA,QAAQ,CAACC,OAAO,CAAC,SAACC,UAAU,EAAA;qBAAKA,UAAU,CAACH,KAAK,CAAC,CAAA;EAAA,SAAA,CAAC,CAAC;EACrD,KAAA,CAAA;EACQI,IAAAA,IAAAA,SAAS,GAAlB,SAASA,SAAS,CAACC,OAAoB,EAAE;EACvCJ,QAAAA,QAAQ,CAACK,IAAI,CAACD,OAAO,CAAC,CAAC;UACvB,OAAO,WAAA;qBAAMJ,QAAQ,CAACM,MAAM,CAACN,QAAQ,CAACO,OAAO,CAACH,OAAO,CAAC,EAAE,CAAC,CAAC,CAAA;WAAA,CAAC;EAC5D,KAAA,CAAA;MATD,IAAMI,KAAK,GAAGf,yBAAK,CAACgB,QAAQ,CAAgB,EAAE,CAAC,CAAC;EAChD,IAAA,IAAMT,QAAQ,GAAGQ,KAAK,CAAC,CAAC,CAAC,CAAC;MAU1B,qBACEf,yBAAA,CAAA,aAAA,CAACD,YAAY,CAACkB,QAAQ,EAAA;EAACC,QAAAA,KAAK,EAAE;EAAER,YAAAA,SAAS,EAATA,SAAS;EAAE,SAAA;uBACzCV,yBAACmB,CAAAA,aAAAA,CAAAA,+BAAW,CAACC,IAAI,EAAA;EACfC,QAAAA,KAAK,EAAEF,+BAAW,CAACG,UAAU,CAACC,YAAY;UAC1CC,gCAAgC,EAAE,SAChClB,KAAwC,EACrC;cACHA,KAAK,CAACmB,OAAO,EAAE,CAAC;cAChBpB,OAAO,CAACC,KAAK,CAAC,CAAC;EACf,YAAA,OAAO,KAAK,CAAC;EACd,SAAA;SAEAF,QAAQ,CACQ,CACG,CACxB;EACH,CAAA;EAEM,SAASsB,QAAQ,CAACf,OAAO,EAAEgB,YAAY,EAAE;MAC9C,IAAMC,OAAO,GAAG5B,yBAAK,CAAC6B,UAAU,CAAC9B,YAAY,CAAC,CAAC;MAC/C,IAAI,CAAC6B,OAAO,EAAE;EACZ,QAAA,MAAM,IAAIE,KAAK,CACb,6IAA6I,CAC9I,CAAC;EACH,KAAA;MAED9B,yBAAK,CAAC+B,SAAS,CACb,WAAA;EAAMH,QAAAA,OAAAA,OAAO,CAAClB,SAAS,CAACC,OAAO,CAAC,CAAA;OAAA,EAChC;EAACiB,QAAAA,OAAO,CAAClB,SAAS;UAAEC,OAAO;EAAC,KAAA,CAACqB,MAAM,CAACL,YAAY,CAAC,CAClD,CAAC;EACH;;;;;;;;;;;;"}
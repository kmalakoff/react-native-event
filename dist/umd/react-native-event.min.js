!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("react"),require("react-native")):"function"==typeof define&&define.amd?define(["exports","react","react-native"],t):t((e="undefined"!=typeof globalThis?globalThis:e||self).reactNativeEvent={},e.React,e.ReactNative)}(this,(function(e,t,n){"use strict";var r=t.createContext(void 0);e.EventContext=r,e.EventProvider=function(e){var i=e.children,o=t.useState([])[0];return t.createElement(r.Provider,{value:{subscribe:function(e){return o.push(e),function(){return o.splice(o.indexOf(e),1)}}}},t.createElement(n.View,{style:n.StyleSheet.absoluteFill,onStartShouldSetResponderCapture:function(e){return e.persist(),function(e){o.forEach((function(t){return t(e)}))}(e),!1}},i))},e.useEvent=function(e,n){var i=t.useContext(r);if(!i)throw new Error("react-native-event: subscribe not found on context. You might be missing the EventProvider or have multiple instances of react-native-event");t.useEffect((function(){return i.subscribe(e)}),[i.subscribe,e].concat(n))},Object.defineProperty(e,"__esModule",{value:!0})}));
//# sourceMappingURL=react-native-event.min.js.map

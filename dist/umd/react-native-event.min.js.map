{"version":3,"file":"react-native-event.min.js","sources":["../../src/index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactNative from 'react-native';\n\nexport type EventTypes = ReactNative.GestureResponderEvent;\nexport type HandlerType = (event: EventTypes) => void;\n\nexport type EventContextType = {\n  subscribe: (handler: HandlerType) => void;\n};\n\nexport const EventContext = React.createContext<EventContextType | undefined>(\n  undefined,\n);\n\nexport type EventProviderProps = {\n  events?: string[];\n  children?: React.ReactNode;\n};\nexport function EventProvider({ children }: EventProviderProps) {\n  const state = React.useState<HandlerType[]>([]);\n  const handlers = state[0];\n\n  function onEvent(event: EventTypes) {\n    handlers.forEach((subscriber) => subscriber(event));\n  }\n  function subscribe(handler: HandlerType) {\n    handlers.push(handler);\n    return () => handlers.splice(handlers.indexOf(handler), 1);\n  }\n\n  return (\n    <EventContext.Provider value={{ subscribe }}>\n      <ReactNative.View\n        style={ReactNative.StyleSheet.absoluteFill}\n        onStartShouldSetResponderCapture={(\n          event: ReactNative.GestureResponderEvent,\n        ) => {\n          event.persist();\n          onEvent(event);\n          return false;\n        }}\n      >\n        {children}\n      </ReactNative.View>\n    </EventContext.Provider>\n  );\n}\n\nexport function useEvent(handler, dependencies) {\n  const context = React.useContext(EventContext);\n  if (!context) {\n    throw new Error(\n      'react-native-event: subscribe not found on context. You might be missing the EventProvider or have multiple instances of react-native-event',\n    );\n  }\n\n  React.useEffect(\n    () => context.subscribe(handler),\n    [context.subscribe, handler].concat(dependencies),\n  );\n}\n"],"names":["EventContext","React","createContext","undefined","param","children","handlers","useState","createElement","Provider","value","subscribe","handler","push","splice","indexOf","ReactNative","View","style","StyleSheet","absoluteFill","onStartShouldSetResponderCapture","event","persist","forEach","subscriber","onEvent","dependencies","context","useContext","Error","useEffect","concat"],"mappings":"4aAUaA,EAAeC,EAAAA,QAAMC,mBAChCC,oCAOK,SAAuBC,GAAA,IAAEC,EAAFD,EAAEC,SAExBC,EADQL,EAAAA,QAAMM,SAAwB,IACrB,GAUvB,OACEN,UAAAO,cAACR,EAAaS,SAAQ,CAACC,MAAO,CAAEC,UANlC,SAAmBC,GAEjB,OADAN,EAASO,KAAKD,GACP,kBAAMN,EAASQ,OAAOR,EAASS,QAAQH,GAAU,OAKtDX,UAACe,cAAAA,EAAW,QAACC,KAAI,CACfC,MAAOF,EAAAA,QAAYG,WAAWC,aAC9BC,iCAAkC,SAChCC,GAIA,OAFAA,EAAMC,UAfd,SAAiBD,GACfhB,EAASkB,SAAQ,SAACC,UAAeA,EAAWH,MAetCI,CAAQJ,IACD,IAGRjB,gBAMF,SAAkBO,EAASe,GAChC,IAAMC,EAAU3B,EAAAA,QAAM4B,WAAW7B,GACjC,IAAK4B,EACH,MAAM,IAAIE,MACR,+IAIJ7B,EAAK,QAAC8B,WACJ,WAAMH,OAAAA,EAAQjB,UAAUC,KACxB,CAACgB,EAAQjB,UAAWC,GAASoB,OAAOL"}
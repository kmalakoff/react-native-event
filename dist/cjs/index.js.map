{"version":3,"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactNative from 'react-native';\n\nexport type EventTypes = ReactNative.GestureResponderEvent;\nexport type HandlerType = (event: EventTypes) => void;\n\nexport type EventContextType = {\n  subscribe: (handler: HandlerType) => void;\n};\n\nexport const EventContext = React.createContext<EventContextType | undefined>(\n  undefined,\n);\n\nexport type EventProviderProps = {\n  events?: string[];\n  children?: React.ReactNode;\n};\nexport function EventProvider({ children }: EventProviderProps) {\n  const state = React.useState<HandlerType[]>([]);\n  const handlers = state[0];\n\n  function onEvent(event: EventTypes) {\n    handlers.forEach((subscriber) => subscriber(event));\n  }\n  function subscribe(handler: HandlerType) {\n    handlers.push(handler);\n    return () => handlers.splice(handlers.indexOf(handler), 1);\n  }\n\n  return (\n    <EventContext.Provider value={{ subscribe }}>\n      <ReactNative.View\n        style={ReactNative.StyleSheet.absoluteFill}\n        onStartShouldSetResponderCapture={(\n          event: ReactNative.GestureResponderEvent,\n        ) => {\n          event.persist();\n          onEvent(event);\n          return false;\n        }}\n      >\n        {children}\n      </ReactNative.View>\n    </EventContext.Provider>\n  );\n}\n\nexport function useEvent(handler, dependencies) {\n  const context = React.useContext(EventContext);\n  if (!context) {\n    throw new Error(\n      'react-native-event: subscribe not found on context. You might be missing the EventProvider or have multiple instances of react-native-event',\n    );\n  }\n\n  React.useEffect(\n    () => context.subscribe(handler),\n    [context.subscribe, handler].concat(dependencies),\n  );\n}\n"],"names":["EventProvider","useEvent","EventContext","React","createContext","undefined","children","onEvent","event","handlers","forEach","subscriber","subscribe","handler","push","splice","indexOf","state","useState","Provider","value","ReactNative","View","style","StyleSheet","absoluteFill","onStartShouldSetResponderCapture","persist","dependencies","context","useContext","Error","useEffect","concat"],"mappings":"AAAA;;;;QAkBgBA,aAAa,GAAbA,aAAa;QA8BbC,QAAQ,GAARA,QAAQ;;AAhDN,IAAA,MAAO,kCAAP,OAAO,EAAA;AACD,IAAA,YAAc,kCAAd,cAAc,EAAA;;;;;;AAS/B,IAAMC,YAAY,iBAAGC,MAAK,QAAA,CAACC,aAAa,CAC7CC,SAAS,CACV,AAAC;QAFWH,YAAY,GAAZA,YAAY;AAQlB,SAASF,aAAa,CAAC,KAAgC,EAAE;QAAlC,AAAEM,QAAQ,GAAV,KAAgC,CAA9BA,QAAQ,AAAsB;QAInDC,OAAO,GAAhB,SAASA,OAAO,CAACC,KAAiB,EAAE;QAClCC,QAAQ,CAACC,OAAO,CAAC,SAACC,UAAU;mBAAKA,UAAU,CAACH,KAAK,CAAC;SAAA,CAAC,CAAC;KACrD;QACQI,SAAS,GAAlB,SAASA,SAAS,CAACC,OAAoB,EAAE;QACvCJ,QAAQ,CAACK,IAAI,CAACD,OAAO,CAAC,CAAC;QACvB,OAAO;mBAAMJ,QAAQ,CAACM,MAAM,CAACN,QAAQ,CAACO,OAAO,CAACH,OAAO,CAAC,EAAE,CAAC,CAAC;SAAA,CAAC;KAC5D;IATD,IAAMI,KAAK,GAAGd,MAAK,QAAA,CAACe,QAAQ,CAAgB,EAAE,CAAC,AAAC;IAChD,IAAMT,QAAQ,GAAGQ,KAAK,CAAC,CAAC,CAAC,AAAC;IAU1B,qBACE,6BAACf,YAAY,CAACiB,QAAQ;QAACC,KAAK,EAAE;YAAER,SAAS,EAATA,SAAS;SAAE;qBACzC,6BAACS,YAAW,QAAA,CAACC,IAAI;QACfC,KAAK,EAAEF,YAAW,QAAA,CAACG,UAAU,CAACC,YAAY;QAC1CC,gCAAgC,EAAE,SAChClB,KAAwC,EACrC;YACHA,KAAK,CAACmB,OAAO,EAAE,CAAC;YAChBpB,OAAO,CAACC,KAAK,CAAC,CAAC;YACf,OAAO,KAAK,CAAC;SACd;OAEAF,QAAQ,CACQ,CACG,CACxB;CACH;AAEM,SAASL,QAAQ,CAACY,OAAO,EAAEe,YAAY,EAAE;IAC9C,IAAMC,OAAO,GAAG1B,MAAK,QAAA,CAAC2B,UAAU,CAAC5B,YAAY,CAAC,AAAC;IAC/C,IAAI,CAAC2B,OAAO,EAAE;QACZ,MAAM,IAAIE,KAAK,CACb,6IAA6I,CAC9I,CAAC;KACH;IAED5B,MAAK,QAAA,CAAC6B,SAAS,CACb;eAAMH,OAAO,CAACjB,SAAS,CAACC,OAAO,CAAC;KAAA,EAChC;QAACgB,OAAO,CAACjB,SAAS;QAAEC,OAAO;KAAC,CAACoB,MAAM,CAACL,YAAY,CAAC,CAClD,CAAC;CACH"}
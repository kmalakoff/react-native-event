{"version":3,"sources":["index.ts"],"sourcesContent":["import { createContext, createElement, useContext, useEffect, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport type { GestureResponderEvent } from 'react-native';\n\nexport type EventTypes = GestureResponderEvent;\nexport type HandlerType = (event: EventTypes) => void;\n\nexport type EventContextType = {\n  subscribe: (handler: HandlerType) => void;\n};\n\nexport const EventContext = createContext<EventContextType | undefined>(undefined);\n\nexport type EventProviderProps = {\n  events?: string[];\n  children?: ReactNode;\n};\nexport function EventProvider({ children }: EventProviderProps) {\n  const state = useState<HandlerType[]>([]);\n  const handlers = state[0];\n\n  function onEvent(event: EventTypes) {\n    handlers.forEach((subscriber) => subscriber(event));\n  }\n  function subscribe(handler: HandlerType) {\n    handlers.push(handler);\n    return () => handlers.splice(handlers.indexOf(handler), 1);\n  }\n\n  return createElement(\n    EventContext.Provider,\n    { value: { subscribe } },\n    createElement(\n      View,\n      {\n        style: StyleSheet.absoluteFill,\n        onStartShouldSetResponderCapture: (event) => {\n          event.persist();\n          onEvent(event);\n          return false;\n        },\n      },\n      children\n    )\n  );\n}\n\nexport function useEvent(handler, dependencies) {\n  const context = useContext(EventContext);\n  if (!context) {\n    throw new Error('react-native-event: subscribe not found on context. You might be missing the EventProvider or have multiple instances of react-native-event');\n  }\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => context.subscribe(handler), [context.subscribe, handler].concat(dependencies));\n}\n"],"names":["createContext","createElement","useContext","useEffect","useState","StyleSheet","View","EventContext","undefined","EventProvider","children","state","handlers","onEvent","event","forEach","subscriber","subscribe","handler","push","splice","indexOf","Provider","value","style","absoluteFill","onStartShouldSetResponderCapture","persist","useEvent","dependencies","context","Error","concat"],"mappings":"AAAA,SAASA,aAAa,EAAEC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,OAAO,CAAC;AAEtF,SAASC,UAAU,EAAEC,IAAI,QAAQ,cAAc,CAAC;AAUhD,OAAO,MAAMC,YAAY,GAAGP,aAAa,CAA+BQ,SAAS,CAAC,CAAC;AAMnF,OAAO,SAASC,aAAa,CAAC,EAAEC,QAAQ,CAAA,EAAsB,EAAE;IAC9D,MAAMC,KAAK,GAAGP,QAAQ,CAAgB,EAAE,CAAC,AAAC;IAC1C,MAAMQ,QAAQ,GAAGD,KAAK,CAAC,CAAC,CAAC,AAAC;IAE1B,SAASE,OAAO,CAACC,KAAiB,EAAE;QAClCF,QAAQ,CAACG,OAAO,CAAC,CAACC,UAAU,GAAKA,UAAU,CAACF,KAAK,CAAC,CAAC,CAAC;KACrD;IACD,SAASG,SAAS,CAACC,OAAoB,EAAE;QACvCN,QAAQ,CAACO,IAAI,CAACD,OAAO,CAAC,CAAC;QACvB,OAAO,IAAMN,QAAQ,CAACQ,MAAM,CAACR,QAAQ,CAACS,OAAO,CAACH,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5D;IAED,OAAOjB,aAAa,CAClBM,YAAY,CAACe,QAAQ,EACrB;QAAEC,KAAK,EAAE;YAAEN,SAAS;SAAE;KAAE,EACxBhB,aAAa,CACXK,IAAI,EACJ;QACEkB,KAAK,EAAEnB,UAAU,CAACoB,YAAY;QAC9BC,gCAAgC,EAAE,CAACZ,KAAK,GAAK;YAC3CA,KAAK,CAACa,OAAO,EAAE,CAAC;YAChBd,OAAO,CAACC,KAAK,CAAC,CAAC;YACf,OAAO,KAAK,CAAC;SACd;KACF,EACDJ,QAAQ,CACT,CACF,CAAC;CACH;AAED,OAAO,SAASkB,QAAQ,CAACV,OAAO,EAAEW,YAAY,EAAE;IAC9C,MAAMC,OAAO,GAAG5B,UAAU,CAACK,YAAY,CAAC,AAAC;IACzC,IAAI,CAACuB,OAAO,EAAE;QACZ,MAAM,IAAIC,KAAK,CAAC,6IAA6I,CAAC,CAAC;KAChK;IAED,yEAAyE;IACzE5B,SAAS,CAAC,IAAM2B,OAAO,CAACb,SAAS,CAACC,OAAO,CAAC,EAAE;QAACY,OAAO,CAACb,SAAS;QAAEC,OAAO;KAAC,CAACc,MAAM,CAACH,YAAY,CAAC,CAAC,CAAC;CAChG"}
{"version":3,"sources":["index.ts"],"sourcesContent":["import { createContext, createElement, useContext, useEffect, useState } from 'react';\nimport type { ReactNode } from 'react';\nimport { StyleSheet, View } from 'react-native';\nimport type { GestureResponderEvent } from 'react-native';\n\nexport type EventTypes = GestureResponderEvent;\nexport type HandlerType = (event: EventTypes) => void;\n\nexport type EventContextType = {\n  subscribe: (handler: HandlerType) => void;\n};\n\nexport const EventContext = createContext<EventContextType | undefined>(undefined);\n\nexport type EventProviderProps = {\n  events?: string[];\n  children?: ReactNode;\n};\nexport function EventProvider({ children }: EventProviderProps) {\n  const state = useState<HandlerType[]>([]);\n  const handlers = state[0];\n\n  function onEvent(event: EventTypes) {\n    handlers.forEach((subscriber) => subscriber(event));\n  }\n  function subscribe(handler: HandlerType) {\n    handlers.push(handler);\n    return () => handlers.splice(handlers.indexOf(handler), 1);\n  }\n\n  return createElement(\n    EventContext.Provider,\n    { value: { subscribe } },\n    createElement(\n      View,\n      {\n        style: StyleSheet.absoluteFill,\n        onStartShouldSetResponderCapture: (event) => {\n          event.persist();\n          onEvent(event);\n          return false;\n        },\n      },\n      children\n    )\n  );\n}\n\nexport function useEvent(handler, dependencies) {\n  const context = useContext(EventContext);\n  if (!context) {\n    throw new Error('react-native-event: subscribe not found on context. You might be missing the EventProvider or have multiple instances of react-native-event');\n  }\n\n  // biome-ignore lint/correctness/useExhaustiveDependencies: <explanation>\n  useEffect(() => context.subscribe(handler), [context.subscribe, handler].concat(dependencies));\n}\n"],"names":["createContext","createElement","useContext","useEffect","useState","StyleSheet","View","EventContext","undefined","EventProvider","children","state","handlers","onEvent","event","forEach","subscriber","subscribe","handler","push","splice","indexOf","Provider","value","style","absoluteFill","onStartShouldSetResponderCapture","persist","useEvent","dependencies","context","Error","concat"],"mappings":"AAAA,SAASA,aAAa,EAAEC,aAAa,EAAEC,UAAU,EAAEC,SAAS,EAAEC,QAAQ,QAAQ,QAAQ;AAEtF,SAASC,UAAU,EAAEC,IAAI,QAAQ,eAAe;AAUhD,OAAO,MAAMC,eAAeP,cAA4CQ,WAAW;AAMnF,OAAO,SAASC,cAAc,EAAEC,QAAQ,EAAsB;IAC5D,MAAMC,QAAQP,SAAwB,EAAE;IACxC,MAAMQ,WAAWD,KAAK,CAAC,EAAE;IAEzB,SAASE,QAAQC,KAAiB;QAChCF,SAASG,OAAO,CAAC,CAACC,aAAeA,WAAWF;IAC9C;IACA,SAASG,UAAUC,OAAoB;QACrCN,SAASO,IAAI,CAACD;QACd,OAAO,IAAMN,SAASQ,MAAM,CAACR,SAASS,OAAO,CAACH,UAAU;IAC1D;IAEA,OAAOjB,cACLM,aAAae,QAAQ,EACrB;QAAEC,OAAO;YAAEN;QAAU;IAAE,GACvBhB,cACEK,MACA;QACEkB,OAAOnB,WAAWoB,YAAY;QAC9BC,kCAAkC,CAACZ;YACjCA,MAAMa,OAAO;YACbd,QAAQC;YACR,OAAO;QACT;IACF,GACAJ;AAGN;AAEA,OAAO,SAASkB,SAASV,OAAO,EAAEW,YAAY;IAC5C,MAAMC,UAAU5B,WAAWK;IAC3B,IAAI,CAACuB,SAAS;QACZ,MAAM,IAAIC,MAAM;IAClB;IAEA,yEAAyE;IACzE5B,UAAU,IAAM2B,QAAQb,SAAS,CAACC,UAAU;QAACY,QAAQb,SAAS;QAAEC;KAAQ,CAACc,MAAM,CAACH;AAClF"}
{"version":3,"sources":["index.tsx"],"sourcesContent":["import React from 'react';\nimport ReactNative from 'react-native';\n\nexport type EventTypes = ReactNative.GestureResponderEvent;\nexport type HandlerType = (event: EventTypes) => void;\n\nexport type EventContextType = {\n  subscribe: (handler: HandlerType) => void;\n};\n\nexport const EventContext = React.createContext<EventContextType | undefined>(\n  undefined,\n);\n\nexport type EventProviderProps = {\n  events?: string[];\n  children?: React.ReactNode;\n};\nexport function EventProvider({ children }: EventProviderProps) {\n  const state = React.useState<HandlerType[]>([]);\n  const handlers = state[0];\n\n  function onEvent(event: EventTypes) {\n    handlers.forEach((subscriber) => subscriber(event));\n  }\n  function subscribe(handler: HandlerType) {\n    handlers.push(handler);\n    return () => handlers.splice(handlers.indexOf(handler), 1);\n  }\n\n  return (\n    <EventContext.Provider value={{ subscribe }}>\n      <ReactNative.View\n        style={ReactNative.StyleSheet.absoluteFill}\n        onStartShouldSetResponderCapture={(\n          event: ReactNative.GestureResponderEvent,\n        ) => {\n          event.persist();\n          onEvent(event);\n          return false;\n        }}\n      >\n        {children}\n      </ReactNative.View>\n    </EventContext.Provider>\n  );\n}\n\nexport function useEvent(handler, dependencies) {\n  const context = React.useContext(EventContext);\n  if (!context) {\n    throw new Error(\n      'react-native-event: subscribe not found on context. You might be missing the EventProvider or have multiple instances of react-native-event',\n    );\n  }\n\n  React.useEffect(\n    () => context.subscribe(handler),\n    [context.subscribe, handler].concat(dependencies),\n  );\n}\n"],"names":["React","ReactNative","EventContext","createContext","undefined","EventProvider","children","state","useState","handlers","onEvent","event","forEach","subscriber","subscribe","handler","push","splice","indexOf","Provider","value","View","style","StyleSheet","absoluteFill","onStartShouldSetResponderCapture","persist","useEvent","dependencies","context","useContext","Error","useEffect","concat"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO,CAAC;AAC1B,OAAOC,WAAW,MAAM,cAAc,CAAC;AASvC,OAAO,MAAMC,YAAY,iBAAGF,KAAK,CAACG,aAAa,CAC7CC,SAAS,CACV,CAAC;AAMF,OAAO,SAASC,aAAa,CAAC,EAAEC,QAAQ,CAAA,EAAsB,EAAE;IAC9D,MAAMC,KAAK,GAAGP,KAAK,CAACQ,QAAQ,CAAgB,EAAE,CAAC,AAAC;IAChD,MAAMC,QAAQ,GAAGF,KAAK,CAAC,CAAC,CAAC,AAAC;IAE1B,SAASG,OAAO,CAACC,KAAiB,EAAE;QAClCF,QAAQ,CAACG,OAAO,CAAC,CAACC,UAAU,GAAKA,UAAU,CAACF,KAAK,CAAC,CAAC,CAAC;KACrD;IACD,SAASG,SAAS,CAACC,OAAoB,EAAE;QACvCN,QAAQ,CAACO,IAAI,CAACD,OAAO,CAAC,CAAC;QACvB,OAAO,IAAMN,QAAQ,CAACQ,MAAM,CAACR,QAAQ,CAACS,OAAO,CAACH,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;KAC5D;IAED,qBACE,oBAACb,YAAY,CAACiB,QAAQ;QAACC,KAAK,EAAE;YAAEN,SAAS;SAAE;qBACzC,oBAACb,WAAW,CAACoB,IAAI;QACfC,KAAK,EAAErB,WAAW,CAACsB,UAAU,CAACC,YAAY;QAC1CC,gCAAgC,EAAE,CAChCd,KAAwC,GACrC;YACHA,KAAK,CAACe,OAAO,EAAE,CAAC;YAChBhB,OAAO,CAACC,KAAK,CAAC,CAAC;YACf,OAAO,KAAK,CAAC;SACd;OAEAL,QAAQ,CACQ,CACG,CACxB;CACH;AAED,OAAO,SAASqB,QAAQ,CAACZ,OAAO,EAAEa,YAAY,EAAE;IAC9C,MAAMC,OAAO,GAAG7B,KAAK,CAAC8B,UAAU,CAAC5B,YAAY,CAAC,AAAC;IAC/C,IAAI,CAAC2B,OAAO,EAAE;QACZ,MAAM,IAAIE,KAAK,CACb,6IAA6I,CAC9I,CAAC;KACH;IAED/B,KAAK,CAACgC,SAAS,CACb,IAAMH,OAAO,CAACf,SAAS,CAACC,OAAO,CAAC,EAChC;QAACc,OAAO,CAACf,SAAS;QAAEC,OAAO;KAAC,CAACkB,MAAM,CAACL,YAAY,CAAC,CAClD,CAAC;CACH"}